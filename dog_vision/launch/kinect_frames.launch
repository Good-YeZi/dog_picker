<?xml version="1.0" encoding="UTF-8"?>

<!--https://github.com/ros-pkg-git/ni/blob/master/openni_camera/launch/kinect_frames.launch
<launch>
  <node pkg="tf" type="static_transform_publisher" name="kinect_base_link" args="0 -0.02 0 0 0 0  /openni_camera /openni_depth_frame 100" />  
  <node pkg="tf" type="static_transform_publisher" name="kinect_base_link1" args="0 -0.04 0 0 0 0  /openni_camera /openni_rgb_frame 100" />  
  <node pkg="tf" type="static_transform_publisher" name="kinect_base_link2" args="0 0 0 -1.57 0 -1.57 /openni_depth_frame /openni_depth_optical_frame  100" />  
  <node pkg="tf" type="static_transform_publisher" name="kinect_base_link3" args="0 0 0 -1.57 0 -1.57 /openni_rgb_frame /openni_rgb_optical_frame 100" />  
</launch>
-->
<!--http://code.google.com/p/ros-by-example/source/browse/trunk/rbx_vol_1/rbx1_bringup/launch/kinect_frames.launch?spec=svn157&r=157-->
<!-- Default frames for Kinect/PSDK5 devices
     Places depth and RGB cameras in the same plane with 2.5cm baseline.
     Calibration may improve results, but these defaults are reasonably accurate.
-->
<launch>
  <arg name="camera" default="openni" />

  <arg name="pi/2" value="1.5707963267948966" />
  <arg name="optical_rotate" value="0 0 0 -$(arg pi/2) 0 -$(arg pi/2)" />

  <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link"
        args="0 -0.02  0 0 0 0  /$(arg camera)_link /$(arg camera)_depth_frame 100" />  
  <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link1"
        args="0 -0.045 0 0 0 0  /$(arg camera)_link /$(arg camera)_rgb_frame 100" />  
  <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link2"
        args="$(arg optical_rotate) /$(arg camera)_depth_frame /$(arg camera)_depth_optical_frame  100" />  
  <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link3"
        args="$(arg optical_rotate) /$(arg camera)_rgb_frame /$(arg camera)_rgb_optical_frame 100" />  
</launch>

<!-- TODO Could instead store these in camera_pose_calibration format for consistency
     with user calibrations. Blocked on camera_pose_calibration having sane dependencies. -->
